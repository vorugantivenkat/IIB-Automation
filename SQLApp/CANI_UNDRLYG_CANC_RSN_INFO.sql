
drop table  "ESBACH"."CANI_UNDRLYG_CANC_RSN_INFO"

CREATE TABLE "ESBACH"."CANI_UNDRLYG_CANC_RSN_INFO" 
   (	"CANC_UNDRLYG_CANC_RSN_INFO_ID" NUMBER NOT NULL ENABLE, 
	"CANC_UNDRLYG_ID_CAN_RSN_INF_FK" NUMBER, 
	"CANC_RSN_INFO_RSN_PRTRY" VARCHAR2(35 CHAR), 
	"CANC_RSN_INFO_ADDTL_INFO" VARCHAR2(105 CHAR), 
	 PRIMARY KEY ("CANC_UNDRLYG_CANC_RSN_INFO_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 FOREIGN KEY ("CANC_UNDRLYG_ID_CAN_RSN_INF_FK")
	  REFERENCES "ESBACH"."CANI_UNDERLYING" ("CANC_UNDRLYG_ID") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE SEQUENCE  "ESBACH"."CANI_UND_CANC_RSN_INFO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5501 CACHE 500 NOORDER  NOCYCLE ;

  
  
  CREATE OR REPLACE TRIGGER "ESBACH"."CANI_UND_CANC_RSN_INFO_TRIG" 
   before INSERT
   ON esbach.CANI_UNDRLYG_CANC_RSN_INFO
   FOR EACH ROW
BEGIN
    
    SELECT CANI_UND_CANC_RSN_INFO_SEQ.NEXTVAL INTO :NEW.CANC_UNDRLYG_CANC_RSN_INFO_ID FROM SYS.DUAL;
END;
/
ALTER TRIGGER "ESBACH"."CANI_UND_CANC_RSN_INFO_TRIG" ENABLE;






commit
