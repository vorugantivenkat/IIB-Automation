/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyMessageHeaders();
		DECLARE bool BOOLEAN;
		SET bool = CopyEntireMessage();
		
		RETURN bool;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() RETURNS BOOLEAN BEGIN
		IF FIELDNAME(InputExceptionList.[1]) IS NULL THEN
				SET Environment.Properties = InputRoot.Properties;
			DECLARE srcMsgBlob BLOB ASBITSTREAM(InputRoot.XMLNSC,InputRoot.Properties.Encoding,InputRoot.Properties.CodedCharSetId);
			SET Environment.srcMsg = CAST(srcMsgBlob AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
			SET Environment.txnRef = InputRoot.XMLNSC.*:Reply.*:Header.*:transactionReference;
			SET Environment.payRef = InputRoot.XMLNSC.*:Reply.*:Data.*:FinancialTransaction.*:reference;
			SET Environment.faultString = InputRoot.XMLNSC.*:Reply.*:Fault.*:faultString;
			SET Environment.faultCode = InputRoot.XMLNSC.*:Reply.*:Fault.*:faultCode;

			SET Environment.result = InputRoot.XMLNSC.*:Reply.*:Header.*:replyStatus;

			IF Environment.txnRef LIKE '12%' THEN

				IF Environment.result = 'FIN' THEN
					CALL writeToLogFile(flowname, 'CANI_INFO', 'INFO', ' Response for double entry request with transactionReference' || Environment.txnRef ||'was success updating the status as CANI_CBS_SUCCESS_CBO_SEND') INTO rc;
					SET Environment.dbQueryCount = '26';
					CALL com.oab.exceptionhandler.DBInsertion(LOG4J_CONF_FILE, InputRoot, InputExceptionList, Environment, OutputRoot);



				ELSE
					SET Environment.cbsFail = InputRoot.XMLNSC.*:Reply.*:Fault.*:faultString;
					CALL writeToLogFile(flowname, 'CANI_INFO', 'INFO', ' Response for double entry request with transactionReference' || Environment.txnRef ||'was success updating the status as CANI_CBS_FAILED_CBO_SEND') INTO rc;
					SET Environment.dbQueryCount = '27';
					CALL com.oab.exceptionhandler.DBInsertion(LOG4J_CONF_FILE, InputRoot, InputExceptionList, Environment, OutputRoot);


				END IF;
			END IF;
		ELSE
			IF Environment.variables.count >= 1 THEN
				--DECLARE SleepFlow BOOLEAN SLEEP(5*1000);
				--SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
				CALL com.oab.exceptionhandler.DBInsertion(LOG4J_CONF_FILE, InputRoot, InputExceptionList, Environment, OutputRoot);
				-- SET Environment.variables.count = Environment.variables.count - 1;
				-- SET OutputExceptionList = InputExceptionList;
				-- PROPAGATE TO TERMINAL 'out2' DELETE NONE;
			ELSE
				SET OutputRoot.Properties = Environment.Properties;
				CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC' PARSE(Environment.srcMsg,Environment.Properties.Encoding,Environment.Properties.CodedCharSetId);
				SET OutputExceptionList = InputExceptionList;
				SET Environment.RetryQueue = 'CANI_RETRY_Q';
				PROPAGATE TO TERMINAL 'out3' DELETE NONE;
				SET Environment.Exception = 'True';
				RETURN FALSE;
			END IF;
		END IF;
	END;
