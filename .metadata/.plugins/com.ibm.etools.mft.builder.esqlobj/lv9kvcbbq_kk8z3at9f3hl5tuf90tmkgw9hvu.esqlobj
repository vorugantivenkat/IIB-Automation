CREATE COMPUTE MODULE CBO_Mobile_Inward_Reply_Router_RouteToResposeFlow
	DECLARE KEYPATH EXTERNAL CHARACTER;
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL routeToResposneFlow();
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE routeToResposneFlow() BEGIN
		/*
		DECLARE MSG_TYPE CHARACTER FIELDVALUE(InputRoot.XMLNSC.*:envelope.type);
		IF MSG_TYPE IS NULL THEN
		SET MSG_TYPE = FIELDNAME(InputRoot.XMLNSC.*:*.*[2]);
		END IF;
		-- DECLARE MSG_TYPE CHARACTER FIELDNAME(InputRoot.XMLNSC.*:*.*[2]);
		IF MSG_TYPE LIKE 'Encoding' THEN
		--Got XML Declaration
		SET MSG_TYPE = FIELDNAME(InputRoot.XMLNSC.*:*[2].*[2]);
		END IF;*/		
		--DECLARE OrginalTxt CHARACTER InputRoot.XMLNSC.*:envelope.*:content;
		DECLARE SignTxt CHARACTER InputRoot.XMLNSC.*:envelope.*:signature;
		DECLARE orgDate CHARACTER InputRoot.XMLNSC.*:envelope.*:date;
		DECLARE val BOOLEAN;

		DECLARE INMSGREF REFERENCE TO InputRoot.XMLNSC.*:envelope.*:content;
		CREATE LASTCHILD OF Environment DOMAIN 'XMLNSC' PARSE (INMSGREF,InputProperties.Encoding,InputProperties.CodedCharSetId);

		DECLARE msg_con BLOB ASBITSTREAM(Environment.XMLNSC ENCODING 541 CCSID 1208);
		DECLARE OrginalTxt CHARACTER CAST(msg_con AS CHARACTER CCSID 1208);        
		
		
	    
		IF CONTAINS(OrginalTxt,'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>') THEN
			SET OrginalTxt = SUBSTRING(OrginalTxt AFTER '?>');
		END IF;

		SET OrginalTxt = OrginalTxt||orgDate;

		SET val = verifySign(OrginalTxt,SignTxt,KEYPATH,'oab');		


		IF val THEN --if success then route to application
			
			--DECLARE INMSGREF REFERENCE TO InputRoot.XMLNSC.*:envelope.*:content;
			IF CONTAINS(INMSGREF,'<?xml version="1.0" encoding="UTF-8"?>') THEN

				DECLARE ref CHARACTER SUBSTRING(INMSGREF AFTER '?>');

				CREATE LASTCHILD OF Environment DOMAIN 'XMLNSC' PARSE (ref,InputProperties.Encoding,InputProperties.CodedCharSetId);

			ELSE
				CREATE LASTCHILD OF Environment DOMAIN 'XMLNSC' PARSE (OrginalTxt,InputProperties.Encoding,InputProperties.CodedCharSetId);
			END IF;

			DECLARE ResRef REFERENCE TO Environment.XMLNSC.*:Document.*:FIToFIPmtStsRpt;

			DECLARE MSG_TYPE CHARACTER;
			SET MSG_TYPE = ResRef.*:OrgnlGrpInfAndSts.*:OrgnlMsgNmId;

			IF MSG_TYPE LIKE 'pacs.008.001.05' THEN

				SET OutputRoot.XMLNSC = Environment.XMLNSC;
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'CBO_MPO_RES';

			ELSEIF MSG_TYPE LIKE 'pacs.003.001.05' THEN

				SET OutputRoot.XMLNSC = Environment.XMLNSC;
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'CBO_MPO_DEBIT_RES';
			ELSE

				SET OutputRoot.XMLNSC = Environment.XMLNSC;
				SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'UNKNOWN_CBO_Q';

			END IF;		


		ELSE
			--if faled to match the sign send failure resposne back to CBO
			
			

		END IF;


	END;
END MODULE;