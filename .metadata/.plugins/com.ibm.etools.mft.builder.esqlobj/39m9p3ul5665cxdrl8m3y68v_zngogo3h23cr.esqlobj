CREATE COMPUTE MODULE checkingdb
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		-- SET OutputRoot.MQMD.ReplyToQMgr = InputRoot.MQMD.ReplyToQMgr;
		-- SET OutputRoot.MQMD.ReplyToQ = InputRoot.MQMD.ReplyToQ;
		DECLARE Exce,OrgMsg CHARACTER;

		SET Exce = com.oab.exceptionhandler.getExceptionDesc(InputRoot,OutputRoot,InputExceptionList);

		SET Environment.Exception = SUBSTRING(CAST(Exce AS CHARACTER) BEFORE ':');

		IF CONTAINS(Environment.Exception, 'DatabaseException') THEN
		/*As its  DB exception we should  do infinite looping */
		
		ELSE
			/*As its Other that DB exception we should terminate the request to avoid infinite looping*/
			PROPAGATE TO TERMINAL 'out1';
		END IF;
	END;
END MODULE;