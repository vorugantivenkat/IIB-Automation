CREATE COMPUTE MODULE CBO_RES

	DECLARE LOG4J_CONF_FILE EXTERNAL CHARACTER;
	DECLARE rc BOOLEAN;
	DECLARE txn_end_id,srcMsg CHARACTER;
	DECLARE flowName CHARACTER MessageFlowLabel; --getting flowname

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		DECLARE Bool BOOLEAN;
		CALL CopyEntireMessage() INTO Bool;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() RETURNS BOOLEAN BEGIN

		IF FIELDNAME(InputExceptionList.[1]) IS NULL THEN

			SET Environment.Properties = InputRoot.Properties;
			SET Environment.XMLNSC = InputRoot.XMLNSC;
			SET Environment.variables.count = 3;
			DECLARE srcMsgBlob BLOB ASBITSTREAM(InputRoot.XMLNSC,InputRoot.Properties.Encoding,InputRoot.Properties.CodedCharSetId);
			SET srcMsg = CAST(srcMsgBlob AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
			SET Environment.srcMsg = srcMsg;

			CALL writeToLogFile(flowName, 'REVI_INFO', 'INFO',' -------------------------') INTO rc;


			SET Environment.Variables.Tran_Ref = InputRoot.XMLNSC.*:Reply.*:Header.*:transactionReference;
			DECLARE replyStatus CHARACTER InputRoot.XMLNSC.*:Reply.*:Header.*:replyStatus;
			SET Environment.Variables.payRef = InputRoot.XMLNSC.*:Reply.*:Data.*:FinancialTransaction.*:reference;

			SET Environment.Variables.payRef = InputRoot.XMLNSC.*:Reply.*:Data.*:FinancialTransaction.*:reference;


			IF replyStatus = 'FIN' THEN

				CALL writeToLogFile(flowName, 'REVI_INFO', 'INFO','Success Response received for Debiting Ordering Customer Account with CBS_TRAN_REF - '||Environment.Variables.Tran_Ref) INTO rc;
				CALL writeToLogFile(flowName, 'REVI_INFO', 'INFO','Updating status as REVI_SENT_CBO in TXN table') INTO rc;


				SET Environment.dbQueryCount = '11';
				CALL com.oab.exceptionhandler.DBInsertion(LOG4J_CONF_FILE, InputRoot, InputExceptionList, Environment, OutputRoot);

				IF Environment.Exception = 'True' THEN
					RETURN FALSE;
				END IF;

			ELSE
				CALL writeToLogFile(flowName, 'REVI_INFO', 'INFO','Failure Response received for Crediting Ordering Customer Account with CBS_TRAN_REF - '||Environment.Variables.Tran_Ref) INTO rc;
				CALL writeToLogFile(flowName, 'REVI_INFO', 'INFO','Updating status as REVI_CBS_FAIL in TXN table') INTO rc;


				SET Environment.Variables.faultString = InputRoot.XMLNSC.*:Reply.*:Fault.*:faultString;
				SET Environment.Variables.faultCode = InputRoot.XMLNSC.*:Reply.*:Fault.*:faultCode;

				SET Environment.dbQueryCount = '12';
				CALL com.oab.exceptionhandler.DBInsertion(LOG4J_CONF_FILE, InputRoot, InputExceptionList, Environment, OutputRoot);

				IF Environment.Exception = 'True' THEN
					RETURN FALSE;
				END IF;


			END IF;
			CALL writeToLogFile(flowName, 'REVI_INFO', 'INFO',' -------------------------') INTO rc;
		ELSE --main else block
			IF Environment.variables.count >= 1 THEN
				--DECLARE SleepFlow BOOLEAN SLEEP(5*1000);
				--SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
				CALL com.oab.exceptionhandler.DBInsertion(LOG4J_CONF_FILE, InputRoot, InputExceptionList, Environment, OutputRoot);
				-- SET Environment.variables.count = Environment.variables.count - 1;
				-- SET OutputExceptionList = InputExceptionList;
				-- PROPAGATE TO TERMINAL 'out2' DELETE NONE;
			ELSE
				SET OutputRoot.Properties = Environment.Properties;

				CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC' PARSE(Environment.srcMsg,Environment.Properties.Encoding,Environment.Properties.CodedCharSetId);

				SET OutputExceptionList = InputExceptionList;
				SET Environment.RetryQueue = 'REVI_RETRY_Q';
				PROPAGATE TO TERMINAL 'out3' DELETE NONE;
				SET Environment.Exception = 'True';
				RETURN FALSE;
			END IF;
		END IF;
	END;
END MODULE;