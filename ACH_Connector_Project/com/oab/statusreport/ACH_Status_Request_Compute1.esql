BROKER SCHEMA com.oab.statusreport



CREATE COMPUTE MODULE ACH_Status_Request_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot.MQMD.ReplyToQMgr = InputRoot.MQMD.ReplyToQMgr;
		SET OutputRoot.MQMD.ReplyToQ = InputRoot.MQMD.ReplyToQ;
	 DECLARE Exce CHARACTER;
	 SET Exce = com.oab.exceptionhandler.getExceptionDesc(InputRoot,OutputRoot,InputExceptionList);
	 
	 SET Environment.Exception = SUBSTRING(CAST(Exce AS CHARACTER) BEFORE ':');
	 
	 IF CONTAINS(Environment.Exception, 'DatabaseException') THEN

		DECLARE achRef REFERENCE TO OutputRoot.XMLNSC;
		CREATE LASTCHILD OF OutputRoot.XMLNSC AS achRef NAME 'AchBatchStatusResponse';
		SET achRef.ResponseCode = 'ACH999';
		SET achRef.ResponseString = 'Communication Error';
		
	 ELSE
	 	
	 	DECLARE achRef REFERENCE TO OutputRoot.XMLNSC;
		CREATE LASTCHILD OF OutputRoot.XMLNSC AS achRef NAME 'AchBatchStatusResponse';
		SET achRef.ResponseCode = 'ACH001';
		SET achRef.ResponseString = 'Technical Error';
		
	 END IF;
	 	
	 	
	END;
END MODULE;


